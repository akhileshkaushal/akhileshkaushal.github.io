Installation and Setup
======================

This methylation analysis pipeline is designed for efficient, reproducible processing of Illumina EPIC array data, supporting multiple comparison groups through a centralized JSON-based configuration. It is implemented as a unified, end-to-end pipeline that automates all major steps — from preprocessing and QC to gene-level analysis and visualization — using a single command driven by the config file.

Prerequisites
-------------

Before running the pipeline, ensure the following dependencies are installed:

**Required Software**

- R (version >= 4.1.0)
- Python (version >= 3.8)
- Git
- Unix-based OS (Linux/macOS or WSL on Windows)

**Required R Packages**

- ``minfi``
- ``limma``
- ``wateRmelon``
- ``IlluminaHumanMethylationEPICmanifest``
- ``IlluminaHumanMethylationEPICanno.ilm10b4.hg38``
- ``sva``
- ``pheatmap``
- ``ggplot2``
- ``clusterProfiler``
- ``org.Hs.eg.db``

Install these packages using:

.. code-block:: r

    if (!requireNamespace("BiocManager", quietly = TRUE))
        install.packages("BiocManager")

    BiocManager::install(c(
      "minfi",
      "limma",
      "wateRmelon",
      "IlluminaHumanMethylationEPICmanifest",
      "IlluminaHumanMethylationEPICanno.ilm10b4.hg38",
      "sva",
      "pheatmap",
      "ggplot2",
      "clusterProfiler",
      "org.Hs.eg.db"
    ))

**Required Python Packages**

- ``pandas``
- ``numpy``
- ``argparse``
- ``json``

Install with:

.. code-block:: bash

    pip install pandas numpy argparse

Directory Structure
-------------------

The pipeline expects the following folder layout:

.. code-block:: text

    project_folder/
    ├── config.json
    ├── data/
    │   ├── SampleSheet.csv
    │   ├── IDAT_files/
    │   │   ├── Sample1_R01C01_Red.idat
    │   │   └── Sample1_R01C01_Grn.idat
    ├── scripts/
    │   └── run_pipeline.R
    └── output/

Configuration File
------------------

The core of the pipeline is driven by a ``config.json`` file, which defines metadata, comparisons, filtering, normalization, and annotation parameters. Below is an example structure:

.. code-block:: json

    {
      "project_name": "ARDS_vs_Control_Methylation",
      "input_idat_dir": "data/IDAT_files",
      "sample_sheet": "data/SampleSheet.csv",
      "comparisons": [
        {"group1": "ARDS", "group2": "Control", "name": "ARDS_vs_Control"},
        {"group1": "ARDS", "group2": "Pneumonia", "name": "ARDS_vs_Pneumonia"}
      ],
      "filtering": {
        "detection_pval_threshold": 0.01,
        "remove_cross_reactive": true,
        "remove_sex_chromosomes": false
      },
      "normalization": "funnorm",
      "annotation_db": "org.Hs.eg.db",
      "msigdb_category": "C2"
    }

Execution
---------

To run the full pipeline:

.. code-block:: bash

    Rscript scripts/run_pipeline.R --config config.json

This command executes all major steps:

1. **Preprocessing**: Import IDATs, perform sample and probe QC, apply functional normalization.
2. **Filtering**: Remove unreliable probes based on detection p-value, SNP overlap, and cross-hybridization.
3. **Differential Methylation**: Run ``limma`` to identify DMPs and optionally DMRs.
4. **Annotation and Gene Mapping**:
   - Map significant CpG sites to genes.
   - Classify CpGs into promoter (TSS1500–TSS200), gene body, or intergenic.
   - Collapse multiple CpGs to gene-level statistics by region type.
5. **Pathway Analysis**:
   - Perform over-representation analysis (ORA) using MSigDB categories.
6. **Visualization**:
   - TSS methylation metaplot (±2kb from TSS).
   - Heatmap of top 5% most variable CpGs.
   - PCA based on beta or M-values.

Logs and final outputs (tables, plots, enrichment results) are saved in the ``output/`` directory.
